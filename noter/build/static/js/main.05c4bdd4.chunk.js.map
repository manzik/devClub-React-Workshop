{"version":3,"sources":["NotesList.js","NoteRenderer.js","usePersistentState.js","App.js","index.js"],"names":["isElectron","window","process","type","NotesList","notes","addNote","selectedNoteID","setSelectedNoteID","deleteNoteByID","className","map","note","onClick","id","name","require","prompt","then","noteName","noteID","Date","now","catch","console","log","NoteRenderer","selectedNote","setSelectedNoteText","onChange","e","target","value","text","usePersistentState","defaultState","key","React","useState","localStorageVal","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","defaultNote","App","setNotes","length","filter","newNote","prevNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05c4bdd4.chunk.js","sourcesContent":["import React from \"react\";\n\nconst isElectron = window && window.process && window.process.type;\n\nfunction NotesList({ notes, addNote, selectedNoteID, setSelectedNoteID, deleteNoteByID })\n{\n    const askAddNote = () => \n    {\n        if(!isElectron)\n        {\n            let noteName = prompt(\"Please enter a name for your new note\");\n\n            if(noteName)\n            {\n                let noteID = Date.now();\n                let noteText = \"## New note\";\n\n                addNote(noteID, noteName, noteText);\n            }\n        }\n        else\n        {\n            const smalltalk = require('smalltalk');\n            smalltalk\n            .prompt(\"Question\", \"Please enter a name for your new note\", \"\")\n            .then((noteName) => {\n                let noteID = Date.now();\n                let noteText = \"## New note\";\n\n                addNote(noteID, noteName, noteText);\n            })\n            .catch(() => {\n                console.log(\"cancel\");\n            });\n        }\n        \n    };\n\n    return <div className=\"notes-list\">\n        <div className=\"header-item\">Notes</div>\n        <hr/>\n        {\n            notes.map(note => \n            {\n                return <div className=\"note-item\" onClick={() => setSelectedNoteID(note.id)}>\n                    <div className=\"note-name\">\n                        { note.id == selectedNoteID ? <span>&gt; </span> : \"\" }\n                        { note.name }\n                    </div>\n                    <div className=\"note-delete\" onClick={() => deleteNoteByID(note.id)}>x</div>\n                </div>;\n            })\n        }\n        <div className=\"add-note\" onClick={askAddNote}> + </div>\n    </div>;\n}\n\nexport default NotesList;","import React from \"react\";\nimport ReactMarkdown from 'react-markdown'\n\nfunction NoteRenderer({ selectedNote, setSelectedNoteText })\n{\n    return <>\n        <div className=\"note-input-md\">\n            <textarea\n                onChange={e => setSelectedNoteText(e.target.value)}\n                value={selectedNote.text}\n            >\n            </textarea>\n        </div>\n        <div className=\"note-rendered-md\">\n            {\n                <ReactMarkdown>{selectedNote.text}</ReactMarkdown>\n            }\n        </div>\n    </>;\n}\n\nexport default NoteRenderer;","import React from \"react\";\n\nfunction usePersistentState(defaultState, key)\n{\n    const [state, setState] = React.useState(() => \n    {\n        const localStorageVal = localStorage.getItem(key);\n        if(localStorageVal)\n            return JSON.parse(localStorageVal);\n        else\n            return defaultState;\n    });\n\n    React.useEffect(() => \n    {\n        localStorage.setItem(key, JSON.stringify(state));\n    }, [state]);\n\n    return [state, setState];\n}\n\nexport default usePersistentState;","import React from \"react\";\n\nimport './App.css';\n\nimport NotesList from './NotesList';\nimport NoteRenderer from \"./NoteRenderer\";\nimport usePersistentState from \"./usePersistentState\";\n\nlet defaultNote = {\n  id: 0,\n  name: \"Introduction\",\n  text: `## Noter\n\n![notebook](https://cdn.dribbble.com/users/119233/screenshots/7022501/media/fa17c4799bdbccb6dbbf7e313a678a62.jpg)\nImage from Unsplash\n\nThe best note-taking app, probably ever.\n\n___\n\n## Features\n\n1. Markdown note-taking\n   - Easier and more classy notes with markdown\n2. Add and delete notes\n   - You can add as many notes as you want\n3. Persistent storage\n   - You won't lose your notes, not under my watch\n4. Being the **best** note-taking app ever\n   - I don't _need_ to explain myself\n\nHere's a random Javascript code for no particular reason:\n\\`\\`\\`javascript\nfunction sumOfDigits(num)\n{\n  let sum = 0;\n\n  num = Math.abs(num);\n  while(num != 0)\n  {\n    sum += num % 10; // Add last digit to the sum\n    num = Math.floor(num / 10); // Remove the last digit\n  }\n\n  return sum;\n}\n\\`\\`\\``\n};\n\nfunction App() \n{\n  const [notes, setNotes] = usePersistentState([defaultNote], \"notes\");\n  const [selectedNoteID, setSelectedNoteID] = React.useState(notes.length > 0 ? notes[0].id : null);\n\n  let selectedNote = null;\n\n  const getNoteByID = id => \n  {\n    const note = notes.filter(note => \n    {\n      return note.id == selectedNoteID;\n    })[0];\n\n    return note;\n  };\n  \n  if(selectedNoteID !== null)\n  {\n    selectedNote = getNoteByID(selectedNoteID);\n  }\n  \n  const setSelectedNoteText = (text) => \n  {\n    setNotes(prevNotes => prevNotes.map((note) => \n        (note.id == selectedNoteID ? { ...note, text } : note)\n      )\n    );\n  };\n\n  const addNote = (id, name, text) =>\n  {\n    let newNote = {id, name, text};\n    setNotes(prevNotes => [...prevNotes, newNote]);\n  };\n\n  const deleteNoteByID = (id) => \n  {\n    setNotes(prevNotes => prevNotes.filter(note => note.id !== id));\n  };\n\n  return (\n    <div className=\"App\">\n      <NotesList \n        notes={notes} \n        addNote={addNote}\n        setSelectedNoteID={setSelectedNoteID}\n        selectedNoteID={selectedNoteID}\n        deleteNoteByID={deleteNoteByID}\n      >\n\n      </NotesList>\n      <div className=\"note-body-container\">\n        {\n          !selectedNote\n          ?\n          <span className=\"no-file-selected\">Please create or select a note</span>\n          :\n          <NoteRenderer selectedNote={selectedNote} setSelectedNoteText={setSelectedNoteText}>\n\n          </NoteRenderer>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}