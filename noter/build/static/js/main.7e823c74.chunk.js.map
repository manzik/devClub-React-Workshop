{"version":3,"sources":["NotesList.js","NoteRenderer.js","usePersistentState.js","App.js","index.js"],"names":["NotesList","notes","addNote","selectedNoteID","setSelectedNoteID","deleteNoteByID","className","map","note","onClick","id","name","noteName","prompt","noteID","Date","now","marked","setOptions","renderer","Renderer","highlight","code","language","hljs","require","validLanguage","getLanguage","value","NoteRenderer","selectedNote","setSelectedNoteText","onChange","e","target","text","ReactHtmlParser","usePersistentState","defaultState","key","React","useState","state","setState","useEffect","storedVal","localStorage","getItem","JSON","parse","setItem","stringify","defaultNote","App","setNotes","console","log","filter","newNote","prevNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAgCeA,MA9Bf,YACC,IADoBC,EACrB,EADqBA,MAAOC,EAC5B,EAD4BA,QAASC,EACrC,EADqCA,eAAgBC,EACrD,EADqDA,kBAAmBC,EACxE,EADwEA,eAUpE,OAAO,sBAAKC,UAAU,aAAf,UACH,qBAAKA,UAAU,cAAf,mBACA,uBAEIL,EAAMM,KAAI,SAAAC,GAEN,OAAO,sBAAKF,UAAU,YAAYG,QAAS,kBAAML,EAAkBI,EAAKE,KAAjE,UAEH,sBAAKJ,UAAU,YAAf,UACME,EAAKE,IAAMP,EAAiB,sCAAqB,GAClDK,EAAKG,QAEV,qBAAKL,UAAU,cAAcG,QAAS,kBAAMJ,EAAeG,EAAKE,KAAhE,qBAIZ,qBAAKJ,UAAU,WAAWG,QAxBX,WACf,IAAIG,EAAWC,OAAO,yCAClBC,EAASC,KAAKC,MAGlBd,EAAQY,EAAQF,EAFD,KAqBf,qB,uCCrBRK,IAAOC,WAAW,CACdC,SAAU,IAAIF,IAAOG,SACrBC,UAAW,SAASC,EAAMC,GACxB,IAAMC,EAAOC,EAAQ,IACfC,EAAgBF,EAAKG,YAAYJ,GAAYA,EAAW,YAC9D,OAAOC,EAAKH,UAAUK,EAAeJ,GAAMM,SAuBlCC,MAlBf,YACC,IADuBC,EACxB,EADwBA,aAAcC,EACtC,EADsCA,oBAElC,OAAO,qCACH,qBAAKzB,UAAU,gBAAf,SACI,0BACI0B,SAAU,SAAAC,GAAC,OAAIF,EAAoBE,EAAEC,OAAON,QAC5CA,MAAOE,EAAaK,SAI5B,qBAAK7B,UAAU,mBAAf,SAEQ8B,IAAgBnB,IAAOa,EAAaK,aCNrCE,MArBf,SAA4BC,EAAcC,GACzC,IAAD,EAC4BC,IAAMC,SAASH,GAD3C,mBACSI,EADT,KACgBC,EADhB,KAiBI,OAdAH,IAAMI,WAAU,WAEZ,IAAIC,EAAYC,aAAaC,QAAQR,GAClCM,GAECF,EAASK,KAAKC,MAAMJ,MAEzB,IAEHL,IAAMI,WAAU,WAEZE,aAAaI,QAAQX,EAAKS,KAAKG,UAAUT,MAC1C,CAACA,IAEG,CAACA,EAAOC,ICXfS,EAAc,CAChB1C,GAFkB,EAGlBC,KAAM,eACNwB,KAAK,y0BAoHQkB,MA9Ef,WACC,IAAD,EAC4BhB,EAAmB,CAACe,GAAc,SAD9D,mBACSnD,EADT,KACgBqD,EADhB,OAE8Cd,IAAMC,SA7ChC,GA2CpB,mBAEStC,EAFT,KAEyBC,EAFzB,KAIEmD,QAAQC,IAAIvD,GAEZ,IAAI6B,EAAe,KA6CnB,OAjCsB,OAAnB3B,IAED2B,EAVa7B,EAAMwD,QAAO,SAACjD,GAEzB,OAAOA,EAAKE,IAAMP,KACjB,IAuCH,sBAAKG,UAAU,MAAf,UACE,cAAC,EAAD,CACEL,MAAOA,EACPC,QArBU,SAACQ,EAAIC,EAAMwB,GAEzB,IAAIuB,EAAU,CAAChD,KAAIC,OAAMwB,QACzBmB,GAAS,SAAAK,GAAS,4BAAQA,GAAR,CAAmBD,QAmBjCtD,kBAAmBA,EACnBD,eAAgBA,EAChBE,eAlBiB,SAACK,GAEtB4C,GAAS,SAAAK,GAEP,OAAOA,EAAUF,QAAO,SAACjD,GAEvB,OAAOA,EAAKE,KAAOA,WAgBrB,qBAAKJ,UAAU,sBAAf,SAEKwB,EAID,cAAC,EAAD,CAAcA,aAAcA,EAAcC,oBA7CtB,SAACI,GAE3BmB,GAAS,SAAAK,GAEP,OAAOA,EAAUpD,KAAI,SAACC,GAEpB,OAAOA,EAAKE,IAAMP,EAAX,2BAAiCK,GAAjC,IAAuC2B,SAAS3B,WAqCrD,sBAAMF,UAAU,mBAAhB,kDChHVsD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.7e823c74.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction NotesList({ notes, addNote, selectedNoteID, setSelectedNoteID, deleteNoteByID })\n{\n    const askAddNote = () => {\n        let noteName = prompt(\"Please enter a name for your new note\");\n        let noteID = Date.now();\n        let noteText = \"\";\n\n        addNote(noteID, noteName, noteText);\n    }\n\n    return <div className=\"notes-list\">\n        <div className=\"header-item\">Notes</div>\n        <hr/>\n        {\n            notes.map(note => \n            {\n                return <div className=\"note-item\" onClick={() => setSelectedNoteID(note.id)}>\n                    \n                    <div className=\"note-name\">\n                        { note.id == selectedNoteID ? <span>&gt; </span> : \"\" }\n                        {note.name}\n                    </div>\n                    <div className=\"note-delete\" onClick={() => deleteNoteByID(note.id)}>x</div>\n                </div>;\n            })\n        }\n        <div className=\"add-note\" onClick={askAddNote}> + </div>\n    </div>;\n}\n\nexport default NotesList;","import React from \"react\";\nimport marked from \"marked\";\nimport ReactHtmlParser from \"react-html-parser\";\n\n// https://marked.js.org/using_advanced\n// START: Markdown code highlighter\nimport 'highlight.js/styles/github.css';\nmarked.setOptions({\n    renderer: new marked.Renderer(),\n    highlight: function(code, language) {\n      const hljs = require('highlight.js');\n      const validLanguage = hljs.getLanguage(language) ? language : 'plaintext';\n      return hljs.highlight(validLanguage, code).value;\n    }\n  });\n// END: Markdown code highlighter\n\nfunction NoteRenderer({ selectedNote, setSelectedNoteText })\n{\n    return <>\n        <div className=\"note-input-md\">\n            <textarea\n                onChange={e => setSelectedNoteText(e.target.value)}\n                value={selectedNote.text}\n            >\n            </textarea>\n        </div>\n        <div className=\"note-rendered-md\">\n            {\n                ReactHtmlParser(marked(selectedNote.text))\n            }\n        </div>\n    </>;\n}\n\nexport default NoteRenderer;","import React from \"react\";\n\nfunction usePersistentState(defaultState, key)\n{\n    let [state, setState] = React.useState(defaultState);\n\n    React.useEffect(() => \n    {\n        let storedVal = localStorage.getItem(key);\n        if(storedVal)\n        {\n            setState(JSON.parse(storedVal));\n        }\n    }, []);\n\n    React.useEffect(() => \n    {\n        localStorage.setItem(key, JSON.stringify(state));\n    }, [state]);\n\n    return [state, setState];\n}\n\nexport default usePersistentState;","import React from \"react\";\n\nimport './App.css';\n\nimport NotesList from './NotesList';\nimport NoteRenderer from \"./NoteRenderer\";\nimport usePersistentState from \"./usePersistentState\";\n\nlet defaultNoteID = 0;\nlet defaultNote = {\n  id: defaultNoteID,\n  name: \"Introduction\",\n  text: `## Noter\n\n![notebook](https://cdn.dribbble.com/users/119233/screenshots/7022501/media/fa17c4799bdbccb6dbbf7e313a678a62.jpg)\n<small>Image from Unsplash</small>\n\nThe best note-taking app, probably ever.\n\n___\n\n## Features\n\n1. Markdown note-taking\n  - Easier and more classy notes with markdown\n2. Add and delete notes\n  - You can add as many notes as you want\n3. Persistent storage\n  - You won't lose your notes, not under my watch\n4. Being the **best** note-taking app ever\n  - I don't _need_ to explain myself\n\nHere's a random Javascript code for no particular reason:\n\\`\\`\\`javascript\nfunction sumOfDigits(num)\n{\n  let sum = 0;\n\n  num = Math.abs(num);\n  while(num != 0)\n  {\n    sum += num % 10; // Add last digit to the sum\n    num = Math.floor(num / 10); // Remove the last digit\n  }\n\n  return sum;\n}\n\\`\\`\\``\n};\n\nfunction App() \n{\n  const [notes, setNotes] = usePersistentState([defaultNote], \"notes\");\n  const [selectedNoteID, setSelectedNoteID] = React.useState(defaultNoteID);\n\n  console.log(notes);\n\n  let selectedNote = null;\n\n  const getNoteByID = (id) => \n  {\n    const note = notes.filter((note) => \n    {\n      return note.id == selectedNoteID;\n    })[0];\n\n    return note;\n  };\n  \n  if(selectedNoteID !== null)\n  {\n    selectedNote = getNoteByID(selectedNoteID);\n  }\n  \n  const setSelectedNoteText = (text) => \n  {\n    setNotes(prevNotes => \n    {\n      return prevNotes.map((note) => \n      {\n        return note.id == selectedNoteID ? { ...note, text } : note;\n      });\n    });\n  };\n\n  const addNote = (id, name, text) =>\n  {\n    let newNote = {id, name, text};\n    setNotes(prevNotes => [...prevNotes, newNote]);\n  };\n\n  const deleteNoteByID = (id) => \n  {\n    setNotes(prevNotes => \n    {\n      return prevNotes.filter((note) => \n      {\n        return note.id !== id;\n      });\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <NotesList \n        notes={notes} \n        addNote={addNote}\n        setSelectedNoteID={setSelectedNoteID}\n        selectedNoteID={selectedNoteID}\n        deleteNoteByID={deleteNoteByID}\n      >\n\n      </NotesList>\n      <div className=\"note-body-container\">\n        {\n          !selectedNote\n          ?\n          <span className=\"no-file-selected\">Please create or select a note</span>\n          :\n          <NoteRenderer selectedNote={selectedNote} setSelectedNoteText={setSelectedNoteText}>\n\n          </NoteRenderer>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}