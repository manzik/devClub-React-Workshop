{"version":3,"sources":["NotesList.js","NoteRenderer.js","usePersistentState.js","App.js","index.js"],"names":["NotesList","notes","addNote","selectActiveNoteById","activeNoteId","deleteNoteById","className","map","note","key","id","onClick","style","color","name","noteId","Date","now","noteName","prompt","NoteRenderer","activeNote","setActiveNoteText","mdTextAreaRef","React","useRef","onChange","current","value","ref","text","spellCheck","ReactHtmlParser","marked","usePersistentState","initialValue","initialState","JSON","parse","localStorage","getItem","useState","state","internalSetState","useEffect","setItem","stringify","newState","initialNotes","App","usePersistantState","setNotes","console","log","setActiveNoteId","filter","newText","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAsCeA,MAnCf,YACC,IADoBC,EACrB,EADqBA,MAAOC,EAC5B,EAD4BA,QAASC,EACrC,EADqCA,qBAAsBC,EAC3D,EAD2DA,aAAcC,EACzE,EADyEA,eAarE,OAAO,yBAAKC,UAAU,cAClB,yBAAKA,UAAU,yBAAf,SACA,6BAEIL,EAAMM,KAAI,SAACC,GAEP,OAAO,yBACHF,UAAU,YAAYG,IAAKD,EAAKE,GAChCC,QAAS,kBAAMR,EAAqBK,EAAKE,MAEzC,0BAAMJ,UAAU,aACXE,EAAKE,IAAMN,EAAe,0BAAMQ,MAAO,CAAEC,MAAO,YAAtB,MAAkD,GAC5EL,EAAKM,MAEV,0BAAMR,UAAU,cAAcK,QAAS,kBAAMN,EAAeG,EAAKE,MAAjE,SAIZ,yBAAKJ,UAAU,qBAAqBK,QA5BrB,WAEf,IAAII,EAASC,KAAKC,MACdC,EAAWC,OAAO,0CAGnBD,GACChB,EAAQa,EAAQG,EAHL,MAwBf,S,kCCVOE,MAnBf,YACC,IADuBC,EACxB,EADwBA,WAAYC,EACpC,EADoCA,kBAE5BC,EAAgBC,IAAMC,SAE1B,OAAO,oCACH,yBAAKnB,UAAU,eACX,8BACIoB,SAAU,kBAAMJ,EAAkBC,EAAcI,QAAQC,QACxDC,IAAKN,EACLK,MAAOP,EAAWS,KAClBC,YAAY,KAGpB,yBAAKzB,UAAU,oBACT0B,IAAgBC,IAAOZ,EAAWS,UCIjCI,MArBf,SAA4BzB,EAAK0B,GAE7B,IAAIC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ/B,IADvD,EAEoCe,IAAMiB,SAASL,GAFnD,mBAESM,EAFT,KAEgBC,EAFhB,KAiBI,OAbAnB,IAAMoB,WAAU,WAGqC,OADzBL,aAAaC,QAAQ/B,IAGzC8B,aAAaM,QAAQpC,EAAK4B,KAAKS,UAAUX,MAC9C,IAOI,CAACO,EALe,SAACK,GACpBR,aAAaM,QAAQpC,EAAK4B,KAAKS,UAAUC,IACzCJ,EAAiBI,MCTrBC,EAAe,CAAC,CAClBtC,GAAIM,KAAKC,MACTH,KAAM,eACNgB,KAAK,o6BAkGQmB,MA7Df,WACC,IAAD,EAC0BC,EAAmB,QAASF,GADtD,mBACO/C,EADP,KACckD,EADd,KAEEC,QAAQC,IAAIpD,GAFd,MAGwCuB,IAAMiB,SAASxC,EAAM,GAAKA,EAAM,GAAGS,GAAK,MAHhF,mBAGON,EAHP,KAGqBkD,EAHrB,KAKMjC,EAAa,KA+BjB,OA9BmB,MAAhBjB,IAEDiB,EAAapB,EAAMsD,QAAO,SAAC/C,GAAD,OAAUA,EAAKE,IAAMN,KAAc,IA6B7D,yBAAKE,UAAU,OACb,kBAAC,EAAD,CACEL,MAAOA,EAAOC,QA5BN,SAACQ,EAAII,EAAMgB,GAEvBqB,EAAS,GAAD,mBAAKlD,GAAL,CAAY,CAAES,KAAII,OAAMgB,YA2B5B1B,aAAcA,EACdD,qBAzBqB,SAACO,GAE1B4C,EAAgB5C,IAwBZL,eAtBe,SAACK,GAEpByC,EAASlD,EAAMsD,QAAO,SAAA/C,GAAI,OAAIA,EAAKE,IAAMA,SAsBvC,yBAAKJ,UAAU,uBAEXe,EAEA,kBAAC,EAAD,CACEA,WAAYA,EACZC,kBAzBc,SAACkC,GAEvBL,EAASlD,EAAMM,KAAI,SAACC,GAElB,OAAGA,EAAKE,IAAMN,EACL,2BAAKI,GAAZ,IAAkBsB,KAAM0B,IAEjBhD,SAqBL,0BAAMF,UAAU,oBAAhB,6CCjGVmD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.8d56851b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// Render notes, and give user the option to add a note\r\nfunction NotesList({ notes, addNote, selectActiveNoteById, activeNoteId, deleteNoteById }) \r\n{\r\n\r\n    let onAddNewNote = () => \r\n    {\r\n        let noteId = Date.now();\r\n        let noteName = prompt(\"Please enter a name for your new note.\");\r\n        let noteText = \"\";\r\n        \r\n        if(noteName)\r\n            addNote(noteId, noteName, noteText);\r\n    };\r\n\r\n    return <div className=\"notes-list\">\r\n        <div className=\"note-item header-item\">Notes</div>\r\n        <hr/>\r\n        {\r\n            notes.map((note) => \r\n            {\r\n                return <div \r\n                    className=\"note-item\" key={note.id}\r\n                    onClick={() => selectActiveNoteById(note.id)}\r\n                >\r\n                    <span className=\"note-name\">\r\n                        {note.id == activeNoteId ? <span style={{ color: \"#2EA7FF\" }}>&gt; </span> : \"\"}\r\n                        {note.name}\r\n                    </span>\r\n                    <span className=\"note-delete\" onClick={() => deleteNoteById(note.id)}>x</span>\r\n                </div>;\r\n            })\r\n        }\r\n        <div className=\"note-item add-note\" onClick={onAddNewNote}> + </div>\r\n    </div>;\r\n}\r\n\r\nexport default NotesList;","import React from \"react\";\r\n\r\nimport marked from \"marked\";\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nfunction NoteRenderer({ activeNote, setActiveNoteText }) \r\n{\r\n    let mdTextAreaRef = React.useRef();\r\n\r\n    return <>\r\n        <div className=\"note-raw-md\">\r\n            <textarea\r\n                onChange={() => setActiveNoteText(mdTextAreaRef.current.value)}\r\n                ref={mdTextAreaRef}\r\n                value={activeNote.text}\r\n                spellCheck={false}\r\n            ></textarea>\r\n        </div>\r\n        <div className=\"note-rendered-md\">\r\n            { ReactHtmlParser(marked(activeNote.text)) }\r\n        </div>\r\n    </>;\r\n}\r\n\r\nexport default NoteRenderer;","import React from \"react\";\r\n\r\nfunction usePersistentState(key, initialValue)\r\n{\r\n    let initialState = JSON.parse(localStorage.getItem(key));\r\n    let [state, internalSetState] = React.useState(initialState);\r\n\r\n    React.useEffect(() => \r\n    {\r\n        let localStorageValue = localStorage.getItem(key);\r\n        let hasLocalStorageValue = localStorageValue !== null;\r\n        if(!hasLocalStorageValue)\r\n            localStorage.setItem(key, JSON.stringify(initialValue));\r\n    }, []);\r\n\r\n    let externalSetState = (newState) => {\r\n        localStorage.setItem(key, JSON.stringify(newState));\r\n        internalSetState(newState);\r\n    };\r\n\r\n    return [state, externalSetState];\r\n}\r\n\r\nexport default usePersistentState;","import React from \"react\";\nimport \"./App.css\";\n\nimport NotesList from \"./NotesList\";\nimport NoteRenderer from \"./NoteRenderer\";\n\nimport usePersistantState from \"./usePersistentState\";\n\nlet initialNotes = [{\n  id: Date.now(),\n  name: \"Mount Kailas\",\n  text: `## Noter\n\n  ![notebook](https://cdn.dribbble.com/users/119233/screenshots/7022501/media/fa17c4799bdbccb6dbbf7e313a678a62.jpg)\n  \n  <small>The best note-taking app ever. End of story.</small>\n\n## Features\n\n1. Markdown note-taking\n - Faster and more classy notes with markdown\n2. Add and delete notes\n - You can add as many notes as you want\n1. Persistent storage\n - You won't lose your notes. Not under my watch\n1. Being the **best** note-taking app ever\n - I don't _need_ to explain myself\n\nHere's some random React code for no particular reason:\n\\`\\`\\`javascript\nimport React, { useState } from 'react';\n\nfunction Example() {\n  // Declare a new state variable, which we'll call \"count\"\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  );\n}\n\\`\\`\\``\n}]\n\nfunction App() \n{\n  let [notes, setNotes] = usePersistantState(\"notes\", initialNotes);\n  console.log(notes);\n  let [activeNoteId, setActiveNoteId] = React.useState(notes[0] ? notes[0].id : null);\n\n  let activeNote = null;\n  if(activeNoteId != null)\n  {\n    activeNote = notes.filter((note) => note.id == activeNoteId)[0];\n  }\n\n  let addNote = (id, name, text) => \n  {\n    setNotes([...notes, { id, name, text }])\n  };\n\n  let selectActiveNoteById = (id) => \n  {\n    setActiveNoteId(id);\n  };\n  let deleteNoteById = (id) => \n  {\n    setNotes(notes.filter(note => note.id != id));\n  };\n\n  let setActiveNoteText = (newText) => \n  {\n    setNotes(notes.map((note) => \n    {\n      if(note.id == activeNoteId)\n        return { ...note, text: newText };\n      else\n        return note;\n    }));\n  };\n\n  return (\n    <div className=\"App\">\n      <NotesList \n        notes={notes} addNote={addNote} \n        activeNoteId={activeNoteId}\n        selectActiveNoteById={selectActiveNoteById}\n        deleteNoteById={deleteNoteById}\n      />\n      <div className=\"note-body-container\">\n        {\n          activeNote\n          ?\n          <NoteRenderer \n            activeNote={activeNote}\n            setActiveNoteText={setActiveNoteText}\n          />\n          :\n          <span className=\"no-file-selected\">Please create a new note or select one</span>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}